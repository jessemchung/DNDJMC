body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: scroll;
}

.biggy {
  display: flex;
  flex-direction: column; /* Align children vertically */
}

.top-component {
  z-index: 100;
  /* height: 10vh; */
}

.lower-component {
  position: relative;
  padding-top: 1rem;
}

.blog-container {
  text-align: center;
  padding: 20px;
  max-width: 800px;
  margin: 0 auto;
  z-index: inherit;
  animation: blog-fade-in 3s linear 5s;
  animation-fill-mode: forwards;
  background: linear-gradient(to top, red, yellow);
  -webkit-background-clip: text;
  mask-repeat: no-repeat;
  -webkit-mask-repeat: no-repeat;
  background-clip: text;
  color: transparent;
  mask-size: 0%;
  -webkit-mask-size: 0%;
  mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 1) 70%,
    rgba(0, 0, 0, 0)
  );
  -webkit-mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 1) 70%,
    rgba(0, 0, 0, 0)
  );    
}

@keyframes blog-fade-in {
  from {
    -webkit-mask-size: 0%;
    -webkit-mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 1) 70%,
      rgba(0, 0, 0, 0)
    );    
  }
  50% {
    -webkit-mask-size: 100%;
    -webkit-mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 1),
      rgba(0, 0, 0, 1)
    );    

  }
  100% {
    -webkit-mask-size: 100%;
    -webkit-mask-image: linear-gradient(
      to right,
      rgba(0, 0, 0, 1),
      rgba(0, 0, 0, 1)
    );    
    color: black;
  }
}


.blog-background-image {
  position: absolute;
  width: 100%;
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  animation: sword-animation 5s linear; /* Smooth zoom transition */
  animation-fill-mode: forwards;
  z-index: -1; /* Keeps the background behind content */
}

.blog-background-image-skip {
  position: absolute;
  width: 100%;
  height: 100%;
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  z-index: -1; /* Keeps the background behind content */
  transform: scale(400) translateX(-1.4vh);
}


/* oh I see, so the first part is the trigger, the second part is what it is actually effected */
/* maybe need two different keyframes? */
@keyframes sword-animation {
  from {

  }
  33% {
    transform: scale(10) translateY(-15vh) translateX(-1.4vh);
  }
  66% {
    transform: scale(10) translateY(10vh) translateX(-1.4vh);
  }
  100% {
    transform: scale(400) translateX(-1.4vh);
  }

}

#root {
  display: flex;
  flex-direction: column; /* Stack content vertically */
}

.container {
  display: flex;
  flex-direction: column;
  flex-grow: 1; /* Allow content to grow and fill available space */
  justify-content: center; /* Vertically center content */
  align-items: center; /* Horizontally center content */
}

.title {
  color:#FF9500;
  transition: all 1s ease-in;
  transform-origin: left;
  display: inline-block;
  margin: 0;  
}

.title:hover {
  color: #1f93ff;
  transform: scale(1.5);
}

.nav-option {
  transition: all 1s ease-out;
}

.nav-option:hover {
  color: #1f93ff;
  font-size: 1.5em;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

main > :first-child {
  margin-top: 0;
}

main > :last-child {
  margin-bottom: 0;
}

.box {
}

.box.highlight {
  background-color: #FFC107; /* Amber yellow color */
}

.marker {
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: gray;
  border-radius: 50%;
  z-index: 10;
}

.Blue {
  background-color: #007AFF;
}

.Red {
  background-color: #FF3B30;
}

.Yellow {
  background-color: #FFCC00;
}

.Green {
  background-color: #34C759;
}

.Purple {
  background-color: #AF52DE;
}

.Orange {
  background-color: #FF9500;
}

.creature-image {
  border: 2px solid black;
}

.creature-image:hover {
  border: 2px solid #007AFF; /* Change this color as needed */
}

.container {
  position: relative;
}

.bottom-button {
  background-color: red;
  /* Center the button horizontally */
}

/* for theoretical blog */
.blog-post {
  border-bottom: 1px solid #ddd;
  padding: 20px 0;
}

.blog-post img {
  max-width: 100%;
  height: auto;
}

.blog-post .tags {
  margin-top: 10px;
}

.blog-post .tag {
  background-color: #f0f0f0;
  border-radius: 3px;
  padding: 5px;
  margin-right: 5px;
}

.creature-image {
  width: 100%;    /* Ensures the image takes the full width of the container */
  height: auto;   /* Maintains aspect ratio */
  object-fit: cover; /* Ensures the image covers the entire area of the container */
}


.social-media-buttons {
  display: flex;
  gap: 1em;
  justify-content: center; /* Centers horizontally */
  align-items: center;     /* Centers vertically */
}

.social-media-buttons a {
  text-decoration: none;
  color: inherit;
  transition: color 0.3s ease;
}

.social-media-buttons a:hover {
  color: #007AFF; /* Change this to the hover color of your choice */
}

.facebook-btn { color: #3b5998; }
.twitter-btn { color: #1DA1F2; }
.instagram-btn { color: #E1306C; }
.linkedin-btn { color: #0077B5; }
.github-btn { color: #333; }



/* hex map css */
.single-hex {
  flex-grow: 1;
}

.half-hex {
  flex-grow: 0.5;
  opacity: 0;
  margin: -0.5px;
}

.hex-map-container {
  margin: 0 auto;
  /* overflow: scroll;
  overflow-y: scroll;
  height: 50vh; */

}

.hex-image {
  margin: 1.5px;
  z-index: 10;
  position: relative;
}

/* might want an animation of this flickering in and out which would be helpful maybe? */
.hex-image.semi-transparent {
  z-index: 1;
  opacity: 50%;
}

/* this is for tiles that need to be completely hidden */
.hex-image.transparent {
  z-index: 1;
  opacity: 0%;
}

.hex-map-slide-container {
  position: absolute;
}

/* This is part of the issue */
#hex-map-canvas {
  /* transform: scale(2); */
  
}


.slide-container {

}

.hex-top-floors {
  position: absolute;
  z-index: 100;
  top: 0px;
  left: 0px;
  pointer-events: none;
}

.hex-character {
  position: absolute;
  z-index: 100;
  top: 0px;
  left: 0px;
  
  /* pointer-events: none; */
}


.hex-title {
  position: absolute;
  color: greenyellow;
  font-weight: bold;
  font-size: small;
  max-width: 100%;
  text-align: center; /* Centers each line of text */
  word-break: break-word; /* Breaks long words to fit the width */
  white-space: normal; /* Allows wrapping */
}

.hex-span {
  display: flex;
  justify-content: center;
}
/* #ryuutama_map_no_border {
} */
/*! hex map css end */



/* Adds a smooth transition effect to all properties over 750ms */
.anim750 {
  transition: all 750ms ease-in-out;
}

/* Main container for the entire component */
#Awesome {
  position: relative; /* Allows child elements to be positioned absolutely relative to this container */
  width: 360px; /* Fixed width of the container */
  height: 360px; /* Fixed height of the container */
  margin: 0 auto; /* Centers the container horizontally */
  backface-visibility: hidden; /* Hides the back side of rotated elements */
}

/* Rotates the sticky note effect to the top right corner */
#Awesome .sticky {
  transform: rotate(45deg); /* Rotates the element by 45 degrees */
}

/* Slightly adjusts the rotation on hover for a dynamic effect */
#Awesome:hover .sticky {
  transform: rotate(10deg); /* Rotates the element by 10 degrees on hover */
}

/* Positions the sticky element absolutely within the container */
#Awesome .sticky {
  position: absolute; /* Positions the element relative to the nearest positioned ancestor */
  top: 0; /* Aligns the element to the top of the container */
  left: 0; /* Aligns the element to the left of the container */
  width: 360px; /* Matches the width of the container */
  height: 360px; /* Matches the height of the container */
}

/* Styles for the reveal circle (top circle) */
#Awesome .reveal .circle {
  box-shadow: 0 1px 0px rgba(0, 0, 0, 0.15); /* Adds a subtle shadow */
  font-family: 'helvetica neue', arial; /* Sets the font family */
  font-weight: 200; /* Sets the font weight */
  line-height: 280px; /* Centers text vertically */
  text-align: center; /* Centers text horizontally */
  cursor: pointer; /* Changes the cursor to a pointer on hover */
}

/* Background color for the reveal circle */
#Awesome .reveal .circle {
  background: #fafafa; /* Light gray background */
}

/* Wrapper for the circle elements */
#Awesome .circle_wrapper {
  position: absolute; /* Positions the wrapper absolutely within the container */
  width: 360px; /* Matches the width of the container */
  height: 360px; /* Matches the height of the container */
  left: 0px; /* Aligns the wrapper to the left */
  top: 0px; /* Aligns the wrapper to the top */
  overflow: hidden; /* Hides any content that overflows the wrapper */
}

/* Styles for the circle elements */
#Awesome .circle {
  position: absolute; /* Positions the circle absolutely within the wrapper */
  width: 280px; /* Fixed width of the circle */
  height: 280px; /* Fixed height of the circle */
  margin: 40px; /* Centers the circle within the wrapper */
  border-radius: 999px; /* Makes the circle perfectly round */
}

/* Styles for the back circle (bottom circle) */
#Awesome .back {
  height: 20px; /* Initial height of the back circle */
  top: 60px; /* Initial vertical position of the back circle */
}

/* Adjusts the back circle on hover */
#Awesome:hover .back {
  height: 180px; /* Increases the height of the back circle on hover */
  top: 220px; /* Adjusts the vertical position of the back circle on hover */
}

/* Styles for the back circle's inner circle */
#Awesome .back .circle {
  margin-top: -260px; /* Positions the inner circle within the back circle */
  background-color: #fbec3f; /* Yellow background color */
  background-image: -webkit-linear-gradient(bottom, rgba(251, 236, 63, 0), rgba(255, 255, 255, 0.8)); /* Adds a gradient effect */
}

/* Adjusts the back circle's inner circle on hover */
#Awesome:hover .back .circle {
  margin-top: -100px; /* Repositions the inner circle on hover */
}

/* Styles for the front circle (top circle) */
#Awesome .front {
  height: 300px; /* Initial height of the front circle */
  bottom: 0; /* Aligns the front circle to the bottom */
  top: auto; /* Overrides any top positioning */
  -webkit-box-shadow: 0 -280px 40px -280px rgba(0, 0, 0, 0.3); /* Adds a shadow effect */
}

/* Adjusts the front circle on hover */
#Awesome:hover .front {
  height: 140px; /* Reduces the height of the front circle on hover */
  -webkit-box-shadow: 0 -120px 20px -120px rgba(0, 0, 0, 0.1); /* Adjusts the shadow on hover */
}

/* Styles for the front circle's inner circle */
#Awesome .front .circle {
  margin-top: -20px; /* Positions the inner circle within the front circle */
  background: #fbec3f; /* Yellow background color */
  background-image: -webkit-linear-gradient(bottom, rgba(251, 236, 63, 0) 75%, #f7bb37 95%); /* Adds a gradient effect */
  background-image: -moz-linear-gradient(bottom, rgba(251, 236, 63, 0) 75%, #f7bb37 95%); /* Adds a gradient effect */
  background-image: linear-gradient(bottom, rgba(251, 236, 63, 0) 75%, #f7bb37 95%); /* Adds a gradient effect */
}

/* Styles for the "Peel Me!" text */
#Awesome h4 {
  font-family: 'helvetica neue', arial; /* Sets the font family */
  font-weight: 200; /* Sets the font weight */
  text-align: center; /* Centers the text horizontally */
  position: absolute; /* Positions the text absolutely within the container */
  width: 360px; /* Matches the width of the container */
  height: 280px; /* Matches the height of the circle */
  line-height: 280px; /* Centers the text vertically */
  transition: opacity 50ms linear 400ms; /* Adds a fade-out transition */
}

/* Hides the "Peel Me!" text on hover */
#Awesome:hover h4 {
  opacity: 0; /* Makes the text fully transparent */
  transition: opacity 50ms linear 300ms; /* Adjusts the transition timing */
}

/* Adjusts the front circle's inner circle on hover */
#Awesome:hover .front .circle {
  margin-top: -180px; /* Repositions the inner circle on hover */
  background-color: #e2d439; /* Changes the background color on hover */
  background-position: 0 200px; /* Adjusts the gradient position on hover */
}